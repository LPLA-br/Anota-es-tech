FERRAMENTA DE CONTROLE DE VERSÕES GIT
GERENCIAMENTO DOS ARQUIVOS DOS PROJETOS


DINÂMICA ENTRE WORKTREE E INDEX

(                WORKTREE              )(     INDEX    )
UNTRACKED	UNMODIFIED	MODIFIED	STAGED
|               |               |               |
|---------------|---add-file----|-------------->|
|               |---edit-file-->|               |
|               |               |--stage-file-->|
|<-remove-file--|               |               |
|               |<------commit--|---------------|

DINÂMICA ENTRE WORKTREE INDEX HEAD

WORKTREE		INDEX(STAGING AREA)	.GIT (REPO)HEAD
arquivos		área antes do commit	commit atual
|                       |                       |
|<-------------checkout-|-----------------------|
|---stage fixes-------->|                       |
|                       |-------commit--------->|
|                       |                       |



master 		É o nome padrão da branch principal do seu repositório (renomeável).
		pode haver N branches derivados deste para trabalho em partes específicas
		de um projeto.

origin		É o nome padrão do repositório remoto,  (renomeável). 

fork		Obtenção de um projeto em paralelo ao original para modificações próprias.




PARA MAIS DETALHES LEIA O MANUAL MAN CORRESPONDENTE.
A DOCUMENTAÇÃO  ON-LINE É A  MESMA  DAS PÁGINAS MAN
EM TUA DISTRO LINUX.



			DESCRIÇÃO GENÊRICA DE CADA COMANDO
			      ET PRINCIPAIS OPÇÕES
CONFIGURAÇÃO

	git
		rastreador de conteúdo abestado.
	
	git help
		mostra informação de ajuda sobre o git.

	git config
		obter e definir repositório ou configurar opções globais.
		--local		local a um projeto no host.
		--global	para todos projetos no host.
		user.email user.name

OBTENDO E CRIANDO PROJETOS
	git init
		criar repositório.

	git clone
		clonar repositório remoto ou outro.

BASIC
	git status
		mostrar o status da árvore de trabalho.

	git add
		adicionar_arquivo/atualizar_alterações para o repositório antes do commit.

	git commit -m "text"
		confirmar as mudanças definitivamente para HEAD.
		"text" frase mínima de modificações.
	
	git rm
		remove arquivos do diretório de trabalho e do index.
		git rm --cached		remover do index, não da worktree.

	git mv
		move ou renomeia um arquivo, um diretório, ou um link simbólico.
	
	git reset [opção] [commit]
		redefine o HEAD atual para o estado especificado
		--hard
		--soft
		--mixed
		--merge
		--keep
		--[no-]recurse-submodules
	
	git restore
		restaura arquivos modificados da árvore de diretórios
		de acordo com o último commit. Vide manual.
	
	git notes	
		adicionar ou inspecionar notas dos objetos.
		add copy append edit show merge remove prune

RAMIFICAÇÃO E MESCLAGEM


	git branch
		listar, criar, renomear ou deletar branches, pode ser pricipal ou derivadas.
	
	git checkout
		Atualiza arquivos na árvore de trabalho para corresponder à versão no INDEX 
		ou na árvore especificada.
		Se nenhum pathspec foi fornecido, o git checkout também atualizará o HEAD
		para definir o branch especificado como o branch atual VIDE(switch).

	git switch
		mover-se entre ramificações do projeto.

	git merge
		mesclar duas ou mais branches na atual.
	
	git mergetool
		executar a ferramenta solucionadora de conflito de mescla (após merge geralmente)

	git log
		mostrar log dos commits.

	git stash
		Guarde as alterações em um diretório de trabalho sujo.
		list show drop pop apply branch save clear create store


	git tag 
		Crie, liste, exclua ou verifique um objeto de tag assinado com GPG
		(útil em versionamento)
	
	git worktree
		Gerenciar multiplas árvores de diretórios

COMPARTILHAMENTO E ATUALIZAÇÃO DOS PROJETOS

	git fetch
		Baixar objetos e referências de outros repositórios.
		Alterações no remoto feitas por terceiros desde que fizeste pull
		porém não altera a worktree.

	git pull
		Incorpora mudaças de um repositório remoto.

	git push
		empurrar para remoto
		git push <nome_do_remote_salvo> <nome_da_branch>
		será solicitado nome de usuário e token de acesso ao repositório.

	git remote
		coisas referentes ao repositório remoto, como renomear, listar, adicionar ...

		git remote add <nome> https://github.com/LPLA-br/repositório
		git remote				#para mostrar nome do remoto
		git remote rename origin <novo_nome>	#renomeando
	
	git submodule
		Inicializar, atualizar ou inspecionar submodulos


INSPEÇÃO E COMPARAÇÃO

	git show
		mostrar vários tipos de objetos do git.
		OBJETOS: HEAD <branch> etc...

	git diff
		mostra as mudanças entre commits, commit e a árvore de trabalho,
					WORKTREE vs INDEX
		--cached		INDEX vs último_COMMIT
		HEAD			WORKTREE vs último_COMMIT
		<commitA> <commitB>	Commit vs Commit

	
	git difftool
		mostar mudanças usando ferramentas diff comuns.
	
	git range-dif
		compara dois limites de commit (e.g. duas versões de uma branch)
	
	git shortlog
		resumir a saída de git log.
	
	git describe
		 Dê a um objeto um nome legível por humanos com base em uma referência disponível.

CORRECIONAMENTO

	git apply

	git cherry-pick

	git diff

	git rebase
		Reaplicar commits em cima de outra ponta base.
		-i --interactive

	git revert

DEBUG
	git bisect

	git blame

	git grep



T R A B A L H O------C O L A B O R A T I V O------------------------------

GITHUB
Code
 Código fonte de um projeto.

Issues
 Levantamento de problemas a serem corrigidos.
 Fechamento de problemas resolvidos.
 Problema pode voltar e ser resolvido em seguida.

Pull request
 Ações de incorporação de modificações advindas
 dos colaboradores.

·REPOSITÓRIO COMPARTILHADO
	Todos os participantes tem permissão para alterar
	(add, push, commit, pull, branch , ...)
	Adequado: projetos com poucos colaboradores.

	Comum em projetos mais reservados.

	Problema !
	Criação de ramificação.
	Trabalho...
	Solicitação de mescla para main se tudo
	estiver certo (pull request).

·FORK & PULL
	Todos os colaboradores trabalham em forks do projeto principal.
	para incorporar trabalho é necessário enviar um pull request para
	mantenedores do projeto.

	Comum em projetos open source.

	Problema !
	FORK pessoal do projeto para tua conta.
	Git clone
	Trabalho...
	Git commit & push
	pull request para as modificações.

--------------------------------------------------------------------------

REBASE
Fusão de N>1 commits e um só para facilitação de revisão de commit.

git rebase -i HEAD~3  	#reunir os três últimos
git rebase -i COMMITDID	#reunir de COMMITDID até o mais recente.

pick
stash 
stash
...
stash
--------------------------------------------------------------------------

